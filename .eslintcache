[{"C:\\dev\\coding\\21 22\\create-react-app\\gocode-beta-shop\\src\\index.js":"1","C:\\dev\\coding\\21 22\\create-react-app\\gocode-beta-shop\\src\\App.js":"2","C:\\dev\\coding\\21 22\\create-react-app\\gocode-beta-shop\\src\\reportWebVitals.js":"3","C:\\dev\\coding\\21 22\\create-react-app\\gocode-beta-shop\\src\\utils.js":"4","C:\\dev\\coding\\21 22\\create-react-app\\gocode-beta-shop\\src\\components\\SaleCountdown\\SaleCountdown.js":"5","C:\\dev\\coding\\21 22\\create-react-app\\gocode-beta-shop\\src\\components\\Products\\Products.js":"6","C:\\dev\\coding\\21 22\\create-react-app\\gocode-beta-shop\\src\\components\\ProductDisplayClass\\ProductDisplayClass.js":"7","C:\\dev\\coding\\21 22\\create-react-app\\gocode-beta-shop\\src\\components\\ListCategories\\ListCategories.js":"8","C:\\dev\\coding\\21 22\\create-react-app\\gocode-beta-shop\\src\\components\\Header\\Header.js":"9","C:\\dev\\coding\\21 22\\create-react-app\\gocode-beta-shop\\src\\components\\CategorySelect\\CategorySelect.js":"10","C:\\dev\\coding\\21 22\\create-react-app\\gocode-beta-shop\\src\\pages\\Home\\Home.js":"11","C:\\dev\\coding\\21 22\\create-react-app\\gocode-beta-shop\\src\\pages\\About\\About.js":"12","C:\\dev\\coding\\21 22\\create-react-app\\gocode-beta-shop\\src\\pages\\ProductInfo\\ProductInfo.js":"13","C:\\dev\\coding\\21 22\\create-react-app\\gocode-beta-shop\\src\\components\\SliderFilterPrice\\SliderFilterPrice.js":"14","C:\\dev\\coding\\21 22\\create-react-app\\gocode-beta-shop\\src\\contexts\\ThemeContexts.js":"15","C:\\dev\\coding\\21 22\\create-react-app\\gocode-beta-shop\\src\\components\\ChangeThemeColors\\ChangeThemeColors.js":"16","C:\\dev\\coding\\21 22\\create-react-app\\gocode-beta-shop\\src\\components\\SearchKeyword\\SearchKeyword.js":"17"},{"size":517,"mtime":1614661954242,"results":"18","hashOfConfig":"19"},{"size":4825,"mtime":1614661954114,"results":"20","hashOfConfig":"19"},{"size":375,"mtime":1612278286535,"results":"21","hashOfConfig":"19"},{"size":243,"mtime":1612990970381,"results":"22","hashOfConfig":"19"},{"size":3656,"mtime":1614661954237,"results":"23","hashOfConfig":"19"},{"size":2214,"mtime":1614661954229,"results":"24","hashOfConfig":"19"},{"size":4692,"mtime":1614661954229,"results":"25","hashOfConfig":"19"},{"size":1942,"mtime":1614661954213,"results":"26","hashOfConfig":"19"},{"size":2579,"mtime":1614690316032,"results":"27","hashOfConfig":"19"},{"size":1451,"mtime":1614661954122,"results":"28","hashOfConfig":"19"},{"size":1975,"mtime":1614690161676,"results":"29","hashOfConfig":"19"},{"size":293,"mtime":1614661954242,"results":"30","hashOfConfig":"19"},{"size":1465,"mtime":1614682911671,"results":"31","hashOfConfig":"19"},{"size":1810,"mtime":1614661954242,"results":"32","hashOfConfig":"19"},{"size":358,"mtime":1614661954242,"results":"33","hashOfConfig":"19"},{"size":480,"mtime":1614661954122,"results":"34","hashOfConfig":"19"},{"size":1514,"mtime":1614691009429,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"jxank8",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\dev\\coding\\21 22\\create-react-app\\gocode-beta-shop\\src\\index.js",[],["76","77"],"C:\\dev\\coding\\21 22\\create-react-app\\gocode-beta-shop\\src\\App.js",[],"C:\\dev\\coding\\21 22\\create-react-app\\gocode-beta-shop\\src\\reportWebVitals.js",[],"C:\\dev\\coding\\21 22\\create-react-app\\gocode-beta-shop\\src\\utils.js",[],["78","79"],"C:\\dev\\coding\\21 22\\create-react-app\\gocode-beta-shop\\src\\components\\SaleCountdown\\SaleCountdown.js",["80"],"import React, { useEffect, useRef, useContext } from \"react\";\r\nimport \"./SaleCountdown.css\";\r\nimport PropTypes from \"prop-types\";\r\nimport ThemeContext from \"../../contexts/ThemeContexts\";\r\n\r\n/* this component is called by the Header component *\r\n\r\n/* counts down by seconds the time left until the end of the sale,\r\nand sets state of display message depending on whether the sale has finished */\r\n\r\nconst SaleCountdown = (props) => {\r\n  const { secondsLeft, setSecondsLeft, isSale, setSale } = props;\r\n  const [theme] = useContext(ThemeContext);\r\n\r\n  const convertToDHMS = () => {\r\n    let temp = \"\";\r\n    if (secondsLeft) {\r\n      temp = `\r\n      ${Math.floor(secondsLeft / (60 * 60 * 24))}:${Math.floor(\r\n        (secondsLeft / (60 * 60)) % 24\r\n      )}:`;\r\n      temp = `${temp}${Math.floor((secondsLeft / 60) % 60)}:${Math.floor(\r\n        secondsLeft % 60\r\n      )}`;\r\n      return temp;\r\n    }\r\n  };\r\n\r\n  /************************************ */\r\n  /* version using setTimeout.\r\n  /************************************ */\r\n  /*without the use of useRef, we could not use setInterval here, as it causes an infinite loop! \r\n  /* Each time the state of DHMSLeft is updated, useEffect sets a 1 second timeout.\r\n  At the end of the timeout, the state of the DHMSLeft and secondsLeft update, and so the useEffect runs again,\r\n  and sets another 1 second timeout.\r\n  If the secondsLeft reaches zero\r\n \r\n  useEffect(() => {\r\n    const countdown = setTimeout(() => {\r\n      if (secondsLeft) {\r\n        setSecondsLeft(secondsLeft - 1);\r\n      }\r\n    }, 1000);\r\n\r\n    return () => clearTimeout(countdown);\r\n    */\r\n\r\n  /************************************ */\r\n  /* version using setInterval - needs to use useRef.\r\n  /************************************ */\r\n  const intervalRef = useRef();\r\n\r\n  useEffect(() => {\r\n    const countdown = setInterval(() => {\r\n      if (secondsLeft) {\r\n        setSecondsLeft(secondsLeft - 1);\r\n        console.log(\"counting down, secs:\", secondsLeft);\r\n        setSale(\"true\");\r\n      } else {\r\n        setSale(\"false\");\r\n      }\r\n    }, 1000);\r\n\r\n    //use useRef to create a mutable ref object from the setTimeout identifier (\"countdown\").\r\n    // This lets the timeout id be accessible from the whole component.\r\n    // If we stored the id in a state variable, the component would be re-rendered\r\n    // after the state update so a new interval will be created, creating an infinite loop.\r\n    intervalRef.current = countdown;\r\n\r\n    /********************** */\r\n    /* EXPLANATION:          */\r\n    /********************** */\r\n    /* the intervalRef's current value is updated if starting a new countdown, \r\n    but the intervalRef itself stays fixed in the DOM and doesn't re-render when there's a change in \r\n    state of the secondsLeft variable\r\n    This how the infinite loop is prevented.\r\n    */\r\n\r\n    // Clear timeout if the component is unmounted\r\n    return () => clearTimeout(countdown);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [secondsLeft]);\r\n  //The return will runs each time useEffect finishes the timeout except for the first time\r\n  // and clears the timeout if the component is unmounted\r\n\r\n  const saleMessage = () => {\r\n    return secondsLeft\r\n      ? `10% off!! ${convertToDHMS(\r\n          secondsLeft\r\n        )} days left until the end of the Sale`\r\n      : \"Sale over\";\r\n  };\r\n\r\n  return (\r\n    <div style={{ color: theme.foreground, background: theme.background }}>\r\n      <h2 id=\"message\">{saleMessage()} </h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nSaleCountdown.propTypes = {\r\n  secondsLeft: PropTypes.number,\r\n  setSecondsLeft: PropTypes.func,\r\n};\r\n\r\nexport default SaleCountdown;\r\n","C:\\dev\\coding\\21 22\\create-react-app\\gocode-beta-shop\\src\\components\\Products\\Products.js",[],"C:\\dev\\coding\\21 22\\create-react-app\\gocode-beta-shop\\src\\components\\ProductDisplayClass\\ProductDisplayClass.js",["81"],"import React, { useContext } from \"react\";\r\nimport \"./ProductDisplayClass.css\";\r\nimport PropTypes from \"prop-types\";\r\nimport sale from \"./sale.png\";\r\n//import { Link } from \"react-router-dom\";\r\n//import { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport ProductInfo from \"../../pages/ProductInfo/ProductInfo\";\r\nimport ThemeContext from \"../../contexts/ThemeContexts\";\r\n\r\n/* this component is called from the Products class.\r\n   It renders individual products cards (product title, image, price).\r\n   If the product is a sale item, its title and sale price are colored until the sale ends \r\n   */\r\n\r\nconst ProductDisplayClass = (props) => {\r\n  const {\r\n    color,\r\n    secondsLeft,\r\n    salesProductsIds,\r\n    selectedCategory,\r\n    title,\r\n    image,\r\n    price,\r\n    productid,\r\n    category,\r\n    isSale,\r\n    priceRange,\r\n  } = props;\r\n\r\n  const theme = useContext(ThemeContext);\r\n\r\n  const newPrice = salesProductsIds.includes(productid)\r\n    ? ` Sale: $ ${+(price * 0.9).toFixed(2)}`\r\n    : \"\";\r\n\r\n  /* renders an individual product card, containing product information and image.\r\n  the information an image are obtained from the props which are passed from the ProductsContainerClass */\r\n\r\n  return (\r\n    (!selectedCategory || category === selectedCategory) &&\r\n    price < priceRange[1] &&\r\n    price > priceRange[0] && (\r\n      <div\r\n        className=\"product-card\"\r\n        style={{ color: theme.foreground, background: \"white\" }}\r\n      >\r\n        <div className=\"product-info\">\r\n          {newPrice && isSale ? <img src={sale} alt=\"sale item\"></img> : null}\r\n          <h6\r\n            style={{\r\n              color: newPrice && isSale ? color : \"black\",\r\n            }}\r\n          >\r\n            {title}\r\n          </h6>\r\n        </div>\r\n        <div className=\"product-image\">\r\n          <img src={image} alt={\"\"} />\r\n        </div>\r\n        <div className=\"product-info\">\r\n          <h5>$ {price}</h5>\r\n          <h5\r\n            style={{\r\n              color: color,\r\n              display: newPrice && secondsLeft ? \"block\" : \"none\",\r\n            }}\r\n          >\r\n            {newPrice}\r\n          </h5>\r\n        </div>\r\n      </div>\r\n    )\r\n  );\r\n};\r\n\r\nProductDisplayClass.propTypes = {\r\n  secondsLeft: PropTypes.number,\r\n  color: PropTypes.string,\r\n  price: PropTypes.number,\r\n  selectedCategory: PropTypes.string,\r\n  title: PropTypes.string,\r\n  image: PropTypes.string,\r\n  salesProductsIds: PropTypes.arrayOf(PropTypes.number),\r\n  category: PropTypes.string,\r\n};\r\n\r\nexport default ProductDisplayClass;\r\n\r\n/*\r\nreturn (\r\n    (!selectedCategory || category === selectedCategory) && (\r\n      <div className=\"product-card\">\r\n        <Link to={`/ProductInfo/${productid}`}>\r\n          <ProductInfo\r\n            id={productid}\r\n            price={price}\r\n            image={image}\r\n            title={title}\r\n            isSale={secondsLeft}\r\n            newPrice={newPrice ? newPrice : \"\"}\r\n          />\r\n        </Link>\r\n        <div className=\"product-info\">\r\n          {newPrice && secondsLeft ? (\r\n            <img src={sale} alt=\"sale item\"></img>\r\n          ) : null}\r\n          <h6\r\n            style={{\r\n              color: newPrice && secondsLeft ? color : \"black\",\r\n            }}\r\n          >\r\n            {title}\r\n          </h6>\r\n        </div>\r\n        <div className=\"product-image\">\r\n          <img src={image} alt={\"\"} />\r\n        </div>\r\n        <div className=\"product-info\">\r\n          <h5>$ {price}</h5>\r\n          <h5\r\n            style={{\r\n              color: color,\r\n              display: newPrice && secondsLeft ? \"block\" : \"none\",\r\n            }}\r\n          >\r\n            {newPrice}\r\n          </h5>\r\n        </div>\r\n      </div>\r\n    )\r\n  );\r\n  */\r\n\r\n/*\r\nimport { Link } from \"react-router-dom\";\r\nimport AddTodo from \"../../components/AddTodo/AddTodo\";\r\nimport Todo from \"../../components/Todo/Todo\";\r\n\r\nconst Home = () => {\r\n    const [todos, setTodos] = useState([]);\r\n    // const check = useRef(\"Hello\");\r\n  \r\n    // let check = \"Hello\";\r\n    useEffect(() => {\r\n      fetch(\"https://jsonplaceholder.typicode.com/todos\")\r\n        .then((response) => response.json())\r\n        .then((data) => setTodos(data));\r\n    }, []);\r\n  \r\n    const addTodo = (title) => {\r\n      const newTodo = {\r\n        id: todos.length + 1,\r\n        title,\r\n        userId: 0,\r\n        completed: false,\r\n      };\r\n      setTodos([newTodo, ...todos]);\r\n    };\r\n  \r\n    return (\r\n      <>\r\n        <AddTodo onAdd={addTodo} />\r\n        {todos.map((todo) => (\r\n          <Link to={`/todos/${todo.id}`} key={todo.id}>\r\n            <Todo id={todo.id} title={todo.title} />\r\n          </Link>\r\n        ))}\r\n      </>\r\n    );\r\n  };\r\n  \r\n  */\r\n","C:\\dev\\coding\\21 22\\create-react-app\\gocode-beta-shop\\src\\components\\ListCategories\\ListCategories.js",["82"],"import React, { useEffect } from \"react\";\r\nimport \"./ListCategories.css\";\r\n//import PropTypes from \"prop-types\";\r\nimport ThemeContext from \"../../contexts/ThemeContexts\";\r\n\r\n/*reduce:\r\n *\r\n * array.reduce(function(total, currentValue, currentIndex, arr), initialValue)\r\n *\r\n * xs = name of array\r\n * (rv,x) => arrow fn passed to reduce\r\n * rv = The initialValue, or the previously returned value of the function\r\n *\r\n * The reduce() method reduces the array to a single value.\r\n * The reduce() method executes a provided function for each value of the array (from left-to-right).\r\n * The return value of the function is stored in an accumulator (result/total).\r\n * Note: reduce() does not execute the function for array elements without values.\r\n * Note: This method does not change the original array.\r\n *\r\n * Call this function with xs as the list of products and key as \"category\"\r\n */\r\n\r\nconst groupBy = (xs, key) =>\r\n  xs.reduce((rv, x) => {\r\n    rv[x[key]] = true || [];\r\n    return rv;\r\n  }, {});\r\n\r\nconst ListCategories = (props) => {\r\n  const { products } = props;\r\n\r\n  useEffect(() => {\r\n    console.log(\"In ListC, number of products from props: \", products.length);\r\n  }, [products]);\r\n\r\n  /*\r\n  if (products.length) {\r\n    console.log(\"listing categories\");\r\n    setCategories((products) => Object.keys(groupBy(products, \"category\")));\r\n\r\n    let anothervar = Object.keys(groupBy(products, \"category\"));\r\n\r\n    console.log(\"anothervar:\", anothervar);\r\n    this.setState({\r\n      categories: [\"Select...\", ...anothervar],\r\n    });\r\n    console.log(\"categories: \", categories);\r\n  } else {\r\n    console.log(\"products array empty\");\r\n  }\r\n*/\r\n  return (\r\n    <>\r\n      {Object.keys(groupBy(products, \"category\")).map((category) => (\r\n        <option value={category} key={category}>\r\n          {category}\r\n        </option>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\n/*\r\nListCategories.propTypes = {\r\n\r\n};\r\n*/\r\nexport default ListCategories;\r\n","C:\\dev\\coding\\21 22\\create-react-app\\gocode-beta-shop\\src\\components\\Header\\Header.js",["83"],"C:\\dev\\coding\\21 22\\create-react-app\\gocode-beta-shop\\src\\components\\CategorySelect\\CategorySelect.js",[],"C:\\dev\\coding\\21 22\\create-react-app\\gocode-beta-shop\\src\\pages\\Home\\Home.js",["84"],"C:\\dev\\coding\\21 22\\create-react-app\\gocode-beta-shop\\src\\pages\\About\\About.js",[],"C:\\dev\\coding\\21 22\\create-react-app\\gocode-beta-shop\\src\\pages\\ProductInfo\\ProductInfo.js",[],"C:\\dev\\coding\\21 22\\create-react-app\\gocode-beta-shop\\src\\components\\SliderFilterPrice\\SliderFilterPrice.js",[],"C:\\dev\\coding\\21 22\\create-react-app\\gocode-beta-shop\\src\\contexts\\ThemeContexts.js",[],"C:\\dev\\coding\\21 22\\create-react-app\\gocode-beta-shop\\src\\components\\ChangeThemeColors\\ChangeThemeColors.js",["85","86"],"import React, { useContext, useState, useEffect } from \"react\";\r\nimport ThemeContext from \"../../contexts/ThemeContexts\";\r\n\r\nconst ChangeThemeColors = () => {\r\n  const [theme, toggleTheme] = useContext(ThemeContext);\r\n\r\n  return (\r\n    <button\r\n      style={{\r\n        background: theme.background,\r\n        color: theme.foreground,\r\n      }}\r\n      onClick={toggleTheme}\r\n    >\r\n      {\" \"}\r\n      Change Theme{\" \"}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default ChangeThemeColors;\r\n","C:\\dev\\coding\\21 22\\create-react-app\\gocode-beta-shop\\src\\components\\SearchKeyword\\SearchKeyword.js",["87"],{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"88","replacedBy":"92"},{"ruleId":"90","replacedBy":"93"},{"ruleId":"94","severity":1,"message":"95","line":12,"column":40,"nodeType":"96","messageId":"97","endLine":12,"endColumn":46},{"ruleId":"94","severity":1,"message":"98","line":7,"column":8,"nodeType":"96","messageId":"97","endLine":7,"endColumn":19},{"ruleId":"94","severity":1,"message":"99","line":4,"column":8,"nodeType":"96","messageId":"97","endLine":4,"endColumn":20},{"ruleId":"94","severity":1,"message":"100","line":26,"column":9,"nodeType":"96","messageId":"97","endLine":26,"endColumn":14},{"ruleId":"94","severity":1,"message":"101","line":1,"column":38,"nodeType":"96","messageId":"97","endLine":1,"endColumn":48},{"ruleId":"94","severity":1,"message":"102","line":1,"column":29,"nodeType":"96","messageId":"97","endLine":1,"endColumn":37},{"ruleId":"94","severity":1,"message":"103","line":1,"column":39,"nodeType":"96","messageId":"97","endLine":1,"endColumn":48},{"ruleId":"94","severity":1,"message":"104","line":3,"column":8,"nodeType":"96","messageId":"97","endLine":3,"endColumn":22},"no-native-reassign",["105"],"no-negated-in-lhs",["106"],["105"],["106"],"no-unused-vars","'isSale' is assigned a value but never used.","Identifier","unusedVar","'ProductInfo' is defined but never used.","'ThemeContext' is defined but never used.","'theme' is assigned a value but never used.","'useContext' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'ListCategories' is defined but never used.","no-global-assign","no-unsafe-negation"]